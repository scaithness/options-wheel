name: Run Options Wheel Strategy

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

jobs:
  run-strategy:
    runs-on: ubuntu-latest

    outputs:
      strategy_status: ${{ steps.run.outputs.status }}

    env:
      ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
      ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}
      APCA_API_BASE_URL: https://paper-api.alpaca.markets

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: uv venv .venv

      - name: Activate and install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -e .

      - name: Run strategy
        id: run
        run: |
          source .venv/bin/activate
          run-strategy --fresh-start --strat-log --log-level DEBUG --log-to-file || echo "::set-output name=status::failed"

      - name: Upload strategy log
        uses: actions/upload-artifact@v4
        with:
          name: strategy-log
          path: logs/run.log

      - name: Upload graph (if generated)
        uses: actions/upload-artifact@v4
        with:
          name: strategy-graph
          path: output.png
          if-no-files-found: ignore

  send-email:
    name: üì¨ Send Email Summary
    runs-on: ubuntu-latest
    needs: run-strategy
    if: always()

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: ‚¨áÔ∏è Download log artifact
        uses: actions/download-artifact@v4
        with:
          name: strategy-log
          path: logs

      - name: ‚¨áÔ∏è Download graph artifact (optional)
        uses: actions/download-artifact@v4
        with:
          name: strategy-graph
          path: .
          if-no-files-found: ignore

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Install dependencies
        run: |
          pip install --upgrade pip
          pip install smtplib email-validator  # Optional: pin if needed

      - name: üì¨ Send log summary email
        env:
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
          EMAIL_APP_PASSWORD: ${{ secrets.EMAIL_APP_PASSWORD }}
          STRATEGY_STATUS: ${{ needs.run-strategy.outputs.strategy_status }}
        run: python scripts/email_log_summary.py